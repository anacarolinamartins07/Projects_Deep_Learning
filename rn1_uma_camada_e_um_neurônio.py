# -*- coding: utf-8 -*-
"""RN1- uma camada e um neurônio

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j3w_N5w6-5dSEy4lFjwtaMiu7eWKe6Qu
"""

x = 1 #input: valor de entrada
y = 0 #out: valor de saída
w0 = 0.4 #peso inicial

soma = (w0 * x)
print("A soma é :", soma)

def ativacao(soma):'[p11  8-q0]'
  if soma>=0:
    return 1
  else:
   return 0

y_hat = ativacao(soma)

print("O valor de ntrada foi X:",x)
print("o valor de saida foi:",y)
print("o valor predito foi:",y_hat)

erro = y - y_hat
print("o valor do erro é: ", erro)

taxa_aprendizado = 0.1
w1 = w0 + (taxa_aprendizado * x * erro)
print(w1)

import math

x = 1 #input: valor de entrada
y = 0 #out: valor de saída
w0 = 0.5 #peso inicial

def ativacao(soma):
  if soma>=0:
    return 1
  else:
   return 0

print("O valor de ntrada foi X:",x)
print("o valor de saida foi:",y)

taxa_aprendizado = 0.1
erro = math .inf
interacao = 0


bias = 1
bias_weight = 0.5


while not erro== 0:
  interacao += 1
  print("interacao", interacao )
  print ("o peso é: ",w0)
  soma = (w0*x) + (bias* bias_weight)
  y_hat= ativacao(soma)
  print("o valor predito foi:",y_hat)

  erro = y - y_hat
  print("o erro foi:", erro)

  if not erro== 0:
   w0 = w0 + (taxa_aprendizado * x * erro)
  bias_weight = bias_weight + (taxa_aprendizado * bias *erro)
print("a rede neural aprendeu")